openapi: 3.0.1
info:
  title: SSAPICK API Documentation
  description: 싸피 프로젝트 싸픽의 API 문서입니다.
  version: 0.0.1
servers:
- url: http://localhost:8080
- url: https://www.ssapick.kro.kr
tags: []
paths:
  /api/v1/attendance:
    get:
      tags:
      - 유저
      summary: 출석상태 조회 API
      description: 사용자의 출석상태를 조회한다
      operationId: attendance-controller-test/get-user-attendance-status
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-attendance343903016'
              examples:
                attendance-controller-test/get-user-attendance-status:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"streak\" :\
                    \ 1,\r\n    \"todayChecked\" : true\r\n  }\r\n}"
    post:
      tags:
      - 유저
      summary: 출석 생성 API
      description: 출석을 생성한다.
      operationId: attendance-controller-test/attendance-
      responses:
        "400":
          description: "400"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-attendance1367340396'
              examples:
                attendance-controller-test/attendance-fail:
                  value: "{\r\n  \"success\" : false,\r\n  \"status\" : 4000,\r\n\
                    \  \"message\" : \"오늘 이미 출석을 하셨습니다.\",\r\n  \"data\" : null,\r\
                    \n  \"errors\" : null\r\n}"
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-attendance343903016'
              examples:
                attendance-controller-test/attendance-success:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"streak\" :\
                    \ 1,\r\n    \"todayChecked\" : true\r\n  }\r\n}"
  /api/v1/auth:
    delete:
      tags:
      - 인증
      summary: 회원 탈퇴 API
      description: 회원을 삭제한다.
      operationId: auth-controller-test/success-delete-user
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                auth-controller-test/success-delete-user:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/campus:
    post:
      tags:
      - 유저
      summary: 캠퍼스 생성 API
      description: 전국 캠퍼스 정보를 생성한다.
      operationId: campus-controller-test/캠퍼스_생성_성공_테스트
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-campus-1475916295'
            examples:
              campus-controller-test/캠퍼스_생성_성공_테스트:
                value: "{\r\n  \"name\" : \"캠퍼스 이름\",\r\n  \"section\" : 1,\r\n  \"\
                  description\" : \"전공\"\r\n}"
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                campus-controller-test/캠퍼스_생성_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 201,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/follow:
    get:
      tags:
      - 팔로우
      summary: 로그인된 사용자가 팔로우한 유저 목록을 조회한다.
      description: 팔로우한 유저 목록 조회 API
      operationId: follow-controller-test/팔로우_조회_성공_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-follow1854707152'
              examples:
                follow-controller-test/팔로우_조회_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"userId\"\
                    \ : 2,\r\n    \"name\" : \"테스트 유저 1\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1,\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"follow\" : false,\r\n    \"sameCampus\" : false\r\
                    \n  }, {\r\n    \"userId\" : 3,\r\n    \"name\" : \"테스트 유저 2\"\
                    ,\r\n    \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\"\
                    \ : 1,\r\n    \"campusSection\" : 1,\r\n    \"follow\" : false,\r\
                    \n    \"sameCampus\" : false\r\n  }, {\r\n    \"userId\" : 4,\r\
                    \n    \"name\" : \"테스트 유저 3\",\r\n    \"profileImage\" : \"테스트\
                    \ 프로필 이미지 URL\",\r\n    \"cohort\" : 1,\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"follow\" : false,\r\n    \"sameCampus\" : false\r\
                    \n  } ]\r\n}"
  /api/v1/location:
    get:
      tags:
      - 위치 정보
      summary: 사용자 주위 위치 조회 API
      description: 현재 접속한 사용자 주위에 존재하는 사람들의 위치 정보들을 반환해준다.
      operationId: location-controller-test/사용자_위치_조회_확인_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-location1151677936'
              examples:
                location-controller-test/사용자_위치_조회_확인_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"count\" :\
                    \ 1,\r\n    \"locations\" : [ {\r\n      \"username\" : \"유저 이\
                    름 1\",\r\n      \"profileImage\" : \"프로필 이미지\",\r\n      \"position\"\
                    \ : {\r\n        \"x\" : 1.0,\r\n        \"y\" : 2.0\r\n     \
                    \ },\r\n      \"distance\" : 3.0,\r\n      \"alarm\" : true\r\n\
                    \    }, {\r\n      \"username\" : \"유저 이름 2\",\r\n      \"profileImage\"\
                    \ : \"프로필 이미지\",\r\n      \"position\" : {\r\n        \"x\" :\
                    \ 1.0,\r\n        \"y\" : 2.0\r\n      },\r\n      \"distance\"\
                    \ : 3.0,\r\n      \"alarm\" : true\r\n    }, {\r\n      \"username\"\
                    \ : \"유저 이름 3\",\r\n      \"profileImage\" : \"프로필 이미지\",\r\n\
                    \      \"position\" : {\r\n        \"x\" : 1.0,\r\n        \"\
                    y\" : 2.0\r\n      },\r\n      \"distance\" : 3.0,\r\n      \"\
                    alarm\" : true\r\n    } ]\r\n  }\r\n}"
    post:
      tags:
      - 위치 정보
      summary: 사용자 위치 선택 API
      description: 사용자가 다른 사용자를 선택했을 때 호출되는 API
      operationId: location-controller-test/사용자_특정한_유저_선택_테스트
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-location-488115322'
            examples:
              location-controller-test/사용자_특정한_유저_선택_테스트:
                value: "{\r\n  \"username\" : \"new user\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                location-controller-test/사용자_특정한_유저_선택_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/message:
    post:
      tags:
      - 쪽지
      summary: 메시지 보내기 API
      description: 자신이 받은 픽 기반으로 메시지를 보낸다. (픽 1개당 메시지 1번 가능)
      operationId: message-controller-test/메시지_보내기_성공_테스트
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-message1452958091'
            examples:
              message-controller-test/메시지_보내기_성공_테스트:
                value: "{\r\n  \"pickId\" : 1,\r\n  \"content\" : \"테스트 메시지\"\r\n}"
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-message-messageId-receive486549215'
              examples:
                message-controller-test/메시지_보내기_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/notification:
    get:
      tags:
      - 알림
      summary: 받은 알림 목록 조회 API
      description: 자신이 지금까지 받은 알람들의 목록을 조회한다.
      operationId: notification-controller-test/알림_전체_메시지_조회_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-notification652410838'
              examples:
                notification-controller-test/알림_전체_메시지_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 10,\r\n    \"totalPages\" : 4,\r\n    \"size\" : 3,\r\n  \
                    \  \"content\" : [ {\r\n      \"type\" : \"PICK\",\r\n      \"\
                    title\" : \"테스트 타이틀 1\",\r\n      \"message\" : \"테스트 메시지\",\r\
                    \n      \"createdAt\" : null,\r\n      \"read\" : false\r\n  \
                    \  }, {\r\n      \"type\" : \"PICK\",\r\n      \"title\" : \"테\
                    스트 타이틀 2\",\r\n      \"message\" : \"테스트 메시지\",\r\n      \"createdAt\"\
                    \ : null,\r\n      \"read\" : false\r\n    }, {\r\n      \"type\"\
                    \ : \"PICK\",\r\n      \"title\" : \"테스트 타이틀 3\",\r\n      \"\
                    message\" : \"테스트 메시지\",\r\n      \"createdAt\" : null,\r\n  \
                    \    \"read\" : false\r\n    }, {\r\n      \"type\" : \"PICK\"\
                    ,\r\n      \"title\" : \"테스트 타이틀 4\",\r\n      \"message\" : \"\
                    테스트 메시지\",\r\n      \"createdAt\" : null,\r\n      \"read\" :\
                    \ false\r\n    }, {\r\n      \"type\" : \"PICK\",\r\n      \"\
                    title\" : \"테스트 타이틀 5\",\r\n      \"message\" : \"테스트 메시지\",\r\
                    \n      \"createdAt\" : null,\r\n      \"read\" : false\r\n  \
                    \  } ],\r\n    \"number\" : 0,\r\n    \"sort\" : {\r\n      \"\
                    empty\" : true,\r\n      \"sorted\" : false,\r\n      \"unsorted\"\
                    \ : true\r\n    },\r\n    \"numberOfElements\" : 5,\r\n    \"\
                    pageable\" : {\r\n      \"pageNumber\" : 0,\r\n      \"pageSize\"\
                    \ : 3,\r\n      \"sort\" : {\r\n        \"empty\" : true,\r\n\
                    \        \"sorted\" : false,\r\n        \"unsorted\" : true\r\n\
                    \      },\r\n      \"offset\" : 0,\r\n      \"unpaged\" : false,\r\
                    \n      \"paged\" : true\r\n    },\r\n    \"first\" : true,\r\n\
                    \    \"last\" : false,\r\n    \"empty\" : false\r\n  }\r\n}"
  /api/v1/pick:
    get:
      tags:
      - 픽
      summary: 픽 진행 상태 조회 API
      description: 사용자의 픽 진행 상태를 조회한다.
      operationId: pick-controller-test/픽_진행_상태_조회_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-pick-1299940846'
              examples:
                pick-controller-test/픽_진행_상태_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"index\" :\
                    \ 1,\r\n    \"pickCount\" : 1,\r\n    \"blockCount\" : 1,\r\n\
                    \    \"passCount\" : 1,\r\n    \"endTime\" : null,\r\n    \"cooltime\"\
                    \ : false\r\n  }\r\n}"
    post:
      tags:
      - 픽
      summary: 픽 생성 API
      description: 사용자가 선택한 픽을 데이터베이스에 생성한다.
      operationId: pick-controller-test/픽_선택_
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-pick1853852005'
            examples:
              pick-controller-test/픽_선택_생성_테스트:
                value: "{\r\n  \"receiverId\" : 2,\r\n  \"questionId\" : 1,\r\n  \"\
                  index\" : 1,\r\n  \"status\" : \"PICKED\"\r\n}"
              pick-controller-test/픽_선택_시_질문_차단:
                value: "{\r\n  \"questionId\" : 1,\r\n  \"index\" : 1,\r\n  \"status\"\
                  \ : \"BLOCK\"\r\n}"
              pick-controller-test/픽_선택_패스_테스트:
                value: "{\r\n  \"questionId\" : 1,\r\n  \"index\" : 1,\r\n  \"status\"\
                  \ : \"PASS\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-pick705871580'
              examples:
                pick-controller-test/픽_선택_생성_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"index\" :\
                    \ 1,\r\n    \"pickCount\" : 1,\r\n    \"blockCount\" : 1,\r\n\
                    \    \"passCount\" : 1,\r\n    \"endTime\" : null,\r\n    \"cooltime\"\
                    \ : false\r\n  }\r\n}"
                pick-controller-test/픽_선택_시_질문_차단:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"index\" :\
                    \ 1,\r\n    \"pickCount\" : 1,\r\n    \"blockCount\" : 1,\r\n\
                    \    \"passCount\" : 1,\r\n    \"endTime\" : null,\r\n    \"cooltime\"\
                    \ : false\r\n  }\r\n}"
                pick-controller-test/픽_선택_패스_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"index\" :\
                    \ 1,\r\n    \"pickCount\" : 1,\r\n    \"blockCount\" : 1,\r\n\
                    \    \"passCount\" : 1,\r\n    \"endTime\" : null,\r\n    \"cooltime\"\
                    \ : false\r\n  }\r\n}"
  /api/v1/questions:
    get:
      tags:
      - 질문
      summary: 모든 질문 조회 API
      description: 모든 질문을 조회한다.
      operationId: question-controller-test/모든_질문_조회_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-category-categoryId-1400495098'
              examples:
                question-controller-test/모든_질문_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 2\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 3\"\r\n  } ]\r\n}"
    post:
      tags:
      - 질문
      summary: 질문 생성 API
      description: 입력된 값을 기반으로 질문을 생성한다.
      operationId: question-controller-test/질문_생성_성공_테스트
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-questions-1057590921'
            examples:
              question-controller-test/질문_생성_성공_테스트:
                value: "{\r\n  \"categoryId\" : 1,\r\n  \"content\" : \"신규 질문 내용\"\
                  \r\n}"
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                question-controller-test/질문_생성_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/user:
    patch:
      tags:
      - 유저
      summary: 로그인한 사용자 유저 정보 수정
      description: 로그인한 유저 정보 수정 API
      operationId: user-controller-test/유저_정보_수정
      requestBody:
        content:
          multipart/form-data;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-user-611735980'
            examples:
              user-controller-test/유저_정보_수정:
                value: "{\r\n  \"name\" : \"민준수\",\r\n  \"gender\" : \"M\",\r\n  \"\
                  cohort\" : 11,\r\n  \"campusName\" : \"광주\",\r\n  \"campusSection\"\
                  \ : 2,\r\n  \"mbti\" : \"ENFJ\",\r\n  \"major\" : \"소프트웨어학부\",\r\
                  \n  \"birth\" : \"1998-06-12\",\r\n  \"residentialArea\" : \"화정동\
                  \",\r\n  \"interest\" : \"로스트아크\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                user-controller-test/유저_정보_수정:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/user-ban:
    get:
      tags:
      - 유저 차단
      summary: 로그인된 사용자가 차단한 유저 목록을 조회한다.
      description: 차단된 유저 목록 조회 API
      operationId: user-ban-controller-test/차단된_유저_목록을_조회하는_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user-ban1379380927'
              examples:
                user-ban-controller-test/차단된_유저_목록을_조회하는_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"userId\"\
                    \ : 2,\r\n    \"nickname\" : \"차단된 유저 1\",\r\n    \"gender\" :\
                    \ \"M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  }, {\r\n \
                    \   \"userId\" : 3,\r\n    \"nickname\" : \"차단된 유저 2\",\r\n  \
                    \  \"gender\" : \"M\",\r\n    \"campusName\" : \"광주\",\r\n   \
                    \ \"campusSection\" : 1,\r\n    \"campusDescription\" : \"자바 전\
                    공\",\r\n    \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\n    \"\
                    cohort\" : 1\r\n  }, {\r\n    \"userId\" : 4,\r\n    \"nickname\"\
                    \ : \"차단된 유저 3\",\r\n    \"gender\" : \"M\",\r\n    \"campusName\"\
                    \ : \"광주\",\r\n    \"campusSection\" : 1,\r\n    \"campusDescription\"\
                    \ : \"자바 전공\",\r\n    \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\
                    \n    \"cohort\" : 1\r\n  } ]\r\n}"
  /api/v1/auth/mattermost-confirm:
    get:
      tags:
      - 인증
      summary: 메타모스트 인증 API
      description: 현재 로그인된 사용자가 메타모스트 인증을 받았는지 확인한다.
      operationId: auth-controller-test/check-mattermost-authenticate
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-auth-mattermost-confirm-575124477'
              examples:
                auth-controller-test/check-mattermost-authenticate:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"authenticated\"\
                    \ : true\r\n  }\r\n}"
    post:
      tags:
      - 인증
      summary: 메타모스트 인증 API
      description: 현재 로그인된 사용자의 정보를 메타모스트 정보로 수정한다.
      operationId: auth-controller-test/success-mattermost-authenticate
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-message-messageId-receive486549215'
            examples:
              auth-controller-test/success-mattermost-authenticate:
                value: "{\r\n  \"loginId\" : \"username\",\r\n  \"password\" : \"\
                  password\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                auth-controller-test/success-mattermost-authenticate:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/auth/sign-out:
    post:
      tags:
      - 인증
      summary: 로그아웃 API
      description: 로그아웃을 통해 인증 토큰과 리프레시 토큰을 삭제한다.
      operationId: auth-controller-test/로그아웃_정상_테스트
      parameters:
      - name: Authorization
        in: header
        description: 발급 받은 인증 토큰
        required: true
        schema:
          type: string
        example: Bearer accessToken
      responses:
        "204":
          description: "204"
          headers:
            Set-Cookie:
              description: 리프레시 토큰 삭제를 위한 쿠키
              schema:
                type: string
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-message-messageId-receive486549215'
              examples:
                auth-controller-test/로그아웃_정상_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/campus/{campusId}:
    get:
      tags:
      - 유저
      summary: 캠퍼스 조회 API
      description: 특정 캠퍼스에 해당된 유저 정보를 조회한다.
      operationId: campus-controller-test/캠퍼스에_해당된_반_정보_아이디로_조회
      parameters:
      - name: campusId
        in: path
        description: 조회할 캠퍼스 ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-campus-campusId914126042'
              examples:
                campus-controller-test/캠퍼스에_해당된_반_정보_아이디로_조회:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"userId\"\
                    \ : 2,\r\n    \"nickname\" : \"user1\",\r\n    \"gender\" : \"\
                    M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  }, {\r\n \
                    \   \"userId\" : 3,\r\n    \"nickname\" : \"user2\",\r\n    \"\
                    gender\" : \"M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  }, {\r\n \
                    \   \"userId\" : 4,\r\n    \"nickname\" : \"user3\",\r\n    \"\
                    gender\" : \"M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  }, {\r\n \
                    \   \"userId\" : 5,\r\n    \"nickname\" : \"user4\",\r\n    \"\
                    gender\" : \"M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  }, {\r\n \
                    \   \"userId\" : 6,\r\n    \"nickname\" : \"user5\",\r\n    \"\
                    gender\" : \"M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  }, {\r\n \
                    \   \"userId\" : 7,\r\n    \"nickname\" : \"user6\",\r\n    \"\
                    gender\" : \"M\",\r\n    \"campusName\" : \"광주\",\r\n    \"campusSection\"\
                    \ : 1,\r\n    \"campusDescription\" : \"자바 전공\",\r\n    \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n    \"cohort\" : 1\r\n  } ]\r\n}"
  /api/v1/follow/recommend:
    get:
      tags:
      - 팔로우
      summary: 추천 팔로우 조회 API
      description: 추천 팔로우 유저 목록을 페이징하여 조회한다.
      operationId: follow-controller-test/추천_팔로우_조회_테스트_페이징
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-follow-recommend1905155110'
              examples:
                follow-controller-test/추천_팔로우_조회_테스트_페이징:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 3,\r\n    \"totalPages\" : 1,\r\n    \"size\" : 10,\r\n  \
                    \  \"content\" : [ {\r\n      \"userId\" : 2,\r\n      \"name\"\
                    \ : \"테스트 유저 1\",\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n      \"cohort\" : 1,\r\n      \"campusSection\" : 1,\r\n\
                    \      \"follow\" : false,\r\n      \"sameCampus\" : false\r\n\
                    \    }, {\r\n      \"userId\" : 3,\r\n      \"name\" : \"테스트 유\
                    저 2\",\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\n  \
                    \    \"cohort\" : 1,\r\n      \"campusSection\" : 1,\r\n     \
                    \ \"follow\" : false,\r\n      \"sameCampus\" : false\r\n    },\
                    \ {\r\n      \"userId\" : 4,\r\n      \"name\" : \"테스트 유저 3\"\
                    ,\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\n      \"\
                    cohort\" : 1,\r\n      \"campusSection\" : 1,\r\n      \"follow\"\
                    \ : false,\r\n      \"sameCampus\" : false\r\n    } ],\r\n   \
                    \ \"number\" : 0,\r\n    \"sort\" : {\r\n      \"empty\" : true,\r\
                    \n      \"sorted\" : false,\r\n      \"unsorted\" : true\r\n \
                    \   },\r\n    \"numberOfElements\" : 3,\r\n    \"pageable\" :\
                    \ {\r\n      \"pageNumber\" : 0,\r\n      \"pageSize\" : 10,\r\
                    \n      \"sort\" : {\r\n        \"empty\" : true,\r\n        \"\
                    sorted\" : false,\r\n        \"unsorted\" : true\r\n      },\r\
                    \n      \"offset\" : 0,\r\n      \"unpaged\" : false,\r\n    \
                    \  \"paged\" : true\r\n    },\r\n    \"first\" : true,\r\n   \
                    \ \"last\" : true,\r\n    \"empty\" : false\r\n  }\r\n}"
  /api/v1/follow/{userId}:
    post:
      tags:
      - 팔로우
      summary: 로그인된 사용자가 다른 사용자를 팔로우한다.
      description: 팔로우 생성 API
      operationId: follow-controller-test/팔로우_생성_성공_테스트
      parameters:
      - name: userId
        in: path
        description: 팔로우할 사용자 식별자
        required: true
        schema:
          type: number
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                follow-controller-test/팔로우_생성_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
    delete:
      tags:
      - 팔로우
      summary: 로그인된 사용자가 다른 사용자를 언팔로우한다.
      description: 팔로우 삭제 API
      operationId: follow-controller-test/팔로우_삭제_성공_테스트
      parameters:
      - name: userId
        in: path
        description: 언팔로우할 사용자 식별자
        required: true
        schema:
          type: number
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                follow-controller-test/팔로우_삭제_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/message/receive:
    get:
      tags:
      - 쪽지
      summary: 받은 메시지 목록 조회 API
      description: 받은 메시지 목록을 페이징하여 조회한다.
      operationId: message-controller-test/받은_메시지_페이징_조회_성공_테스트
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-message-receive1511771333'
              examples:
                message-controller-test/받은_메시지_페이징_조회_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 16,\r\n    \"totalPages\" : 6,\r\n    \"size\" : 3,\r\n  \
                    \  \"content\" : [ {\r\n      \"id\" : 16,\r\n      \"senderId\"\
                    \ : 2,\r\n      \"senderName\" : \"보낸 사람\",\r\n      \"receiverName\"\
                    \ : \"받은 사람\",\r\n      \"senderGender\" : \"M\",\r\n      \"\
                    receiverGender\" : \"M\",\r\n      \"createdAt\" : \"2024-09-16T00:32:20.1071056\"\
                    ,\r\n      \"content\" : \"내용16\",\r\n      \"questionContent\"\
                    \ : \"테스트 질문\",\r\n      \"senderProfileImage\" : \"테스트 프로필 이미\
                    지 URL\",\r\n      \"receiverProfileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n      \"senderCampus\" : \"광주\",\r\n      \"receiverCampus\"\
                    \ : \"광주\",\r\n      \"senderSection\" : 1,\r\n      \"receiverSection\"\
                    \ : 1,\r\n      \"senderCohort\" : 1,\r\n      \"receiverCohort\"\
                    \ : 1\r\n    }, {\r\n      \"id\" : 15,\r\n      \"senderId\"\
                    \ : 2,\r\n      \"senderName\" : \"보낸 사람\",\r\n      \"receiverName\"\
                    \ : \"받은 사람\",\r\n      \"senderGender\" : \"M\",\r\n      \"\
                    receiverGender\" : \"M\",\r\n      \"createdAt\" : \"2024-09-16T00:32:20.1091056\"\
                    ,\r\n      \"content\" : \"내용15\",\r\n      \"questionContent\"\
                    \ : \"테스트 질문\",\r\n      \"senderProfileImage\" : \"테스트 프로필 이미\
                    지 URL\",\r\n      \"receiverProfileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n      \"senderCampus\" : \"광주\",\r\n      \"receiverCampus\"\
                    \ : \"광주\",\r\n      \"senderSection\" : 1,\r\n      \"receiverSection\"\
                    \ : 1,\r\n      \"senderCohort\" : 1,\r\n      \"receiverCohort\"\
                    \ : 1\r\n    }, {\r\n      \"id\" : 14,\r\n      \"senderId\"\
                    \ : 2,\r\n      \"senderName\" : \"보낸 사람\",\r\n      \"receiverName\"\
                    \ : \"받은 사람\",\r\n      \"senderGender\" : \"M\",\r\n      \"\
                    receiverGender\" : \"M\",\r\n      \"createdAt\" : \"2024-09-16T00:32:20.1221061\"\
                    ,\r\n      \"content\" : \"내용14\",\r\n      \"questionContent\"\
                    \ : \"테스트 질문\",\r\n      \"senderProfileImage\" : \"테스트 프로필 이미\
                    지 URL\",\r\n      \"receiverProfileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n      \"senderCampus\" : \"광주\",\r\n      \"receiverCampus\"\
                    \ : \"광주\",\r\n      \"senderSection\" : 1,\r\n      \"receiverSection\"\
                    \ : 1,\r\n      \"senderCohort\" : 1,\r\n      \"receiverCohort\"\
                    \ : 1\r\n    } ],\r\n    \"number\" : 0,\r\n    \"sort\" : {\r\
                    \n      \"empty\" : true,\r\n      \"sorted\" : false,\r\n   \
                    \   \"unsorted\" : true\r\n    },\r\n    \"numberOfElements\"\
                    \ : 3,\r\n    \"pageable\" : {\r\n      \"pageNumber\" : 0,\r\n\
                    \      \"pageSize\" : 3,\r\n      \"sort\" : {\r\n        \"empty\"\
                    \ : true,\r\n        \"sorted\" : false,\r\n        \"unsorted\"\
                    \ : true\r\n      },\r\n      \"offset\" : 0,\r\n      \"unpaged\"\
                    \ : false,\r\n      \"paged\" : true\r\n    },\r\n    \"first\"\
                    \ : true,\r\n    \"last\" : false,\r\n    \"empty\" : false\r\n\
                    \  }\r\n}"
  /api/v1/message/send:
    get:
      tags:
      - 쪽지
      summary: 보낸 메시지 목록 조회 API
      description: 로그인된 사용자가 보낸 메시지 목록을 조회한다.
      operationId: message-controller-test/보낸_메시지_조회_성공_테스트
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-message-send-779330251'
              examples:
                message-controller-test/보낸_메시지_조회_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 16,\r\n    \"totalPages\" : 6,\r\n    \"size\" : 3,\r\n  \
                    \  \"content\" : [ {\r\n      \"id\" : 16,\r\n      \"senderId\"\
                    \ : 2,\r\n      \"senderName\" : \"보낸 사람\",\r\n      \"receiverName\"\
                    \ : \"받은 사람\",\r\n      \"senderGender\" : \"M\",\r\n      \"\
                    receiverGender\" : \"M\",\r\n      \"createdAt\" : \"2024-09-16T00:32:19.9951053\"\
                    ,\r\n      \"content\" : \"내용16\",\r\n      \"questionContent\"\
                    \ : \"테스트 질문\",\r\n      \"senderProfileImage\" : \"테스트 프로필 이미\
                    지 URL\",\r\n      \"receiverProfileImage\" : null,\r\n      \"\
                    senderCampus\" : \"광주\",\r\n      \"receiverCampus\" : \"광주\"\
                    ,\r\n      \"senderSection\" : 1,\r\n      \"receiverSection\"\
                    \ : 1,\r\n      \"senderCohort\" : 1,\r\n      \"receiverCohort\"\
                    \ : 1\r\n    }, {\r\n      \"id\" : 15,\r\n      \"senderId\"\
                    \ : 2,\r\n      \"senderName\" : \"보낸 사람\",\r\n      \"receiverName\"\
                    \ : \"받은 사람\",\r\n      \"senderGender\" : \"M\",\r\n      \"\
                    receiverGender\" : \"M\",\r\n      \"createdAt\" : \"2024-09-16T00:32:19.998105\"\
                    ,\r\n      \"content\" : \"내용15\",\r\n      \"questionContent\"\
                    \ : \"테스트 질문\",\r\n      \"senderProfileImage\" : \"테스트 프로필 이미\
                    지 URL\",\r\n      \"receiverProfileImage\" : null,\r\n      \"\
                    senderCampus\" : \"광주\",\r\n      \"receiverCampus\" : \"광주\"\
                    ,\r\n      \"senderSection\" : 1,\r\n      \"receiverSection\"\
                    \ : 1,\r\n      \"senderCohort\" : 1,\r\n      \"receiverCohort\"\
                    \ : 1\r\n    }, {\r\n      \"id\" : 14,\r\n      \"senderId\"\
                    \ : 2,\r\n      \"senderName\" : \"보낸 사람\",\r\n      \"receiverName\"\
                    \ : \"받은 사람\",\r\n      \"senderGender\" : \"M\",\r\n      \"\
                    receiverGender\" : \"M\",\r\n      \"createdAt\" : \"2024-09-16T00:32:20.0001047\"\
                    ,\r\n      \"content\" : \"내용14\",\r\n      \"questionContent\"\
                    \ : \"테스트 질문\",\r\n      \"senderProfileImage\" : \"테스트 프로필 이미\
                    지 URL\",\r\n      \"receiverProfileImage\" : null,\r\n      \"\
                    senderCampus\" : \"광주\",\r\n      \"receiverCampus\" : \"광주\"\
                    ,\r\n      \"senderSection\" : 1,\r\n      \"receiverSection\"\
                    \ : 1,\r\n      \"senderCohort\" : 1,\r\n      \"receiverCohort\"\
                    \ : 1\r\n    } ],\r\n    \"number\" : 0,\r\n    \"sort\" : {\r\
                    \n      \"empty\" : true,\r\n      \"sorted\" : false,\r\n   \
                    \   \"unsorted\" : true\r\n    },\r\n    \"numberOfElements\"\
                    \ : 3,\r\n    \"pageable\" : {\r\n      \"pageNumber\" : 0,\r\n\
                    \      \"pageSize\" : 3,\r\n      \"sort\" : {\r\n        \"empty\"\
                    \ : true,\r\n        \"sorted\" : false,\r\n        \"unsorted\"\
                    \ : true\r\n      },\r\n      \"offset\" : 0,\r\n      \"unpaged\"\
                    \ : false,\r\n      \"paged\" : true\r\n    },\r\n    \"first\"\
                    \ : true,\r\n    \"last\" : false,\r\n    \"empty\" : false\r\n\
                    \  }\r\n}"
  /api/v1/notification/register:
    post:
      tags:
      - 알림
      summary: FCM 토큰 저장 API
      description: FCM 에서 발급 받은 토큰 값을 저장한다.
      operationId: notification-controller-test/fcm_토큰_저장_테스트
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/api-v1-notification-register160560505'
            examples:
              notification-controller-test/fcm_토큰_저장_테스트:
                value: "{\r\n  \"token\" : \"new-fcm-token\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                notification-controller-test/fcm_토큰_저장_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/pick/alarm:
    get:
      tags:
      - 픽
      summary: 알람설정한 픽 조회 API
      description: 알람설정한 픽을 조회한다.
      operationId: pick-controller-test/알람설정한_픽_조회_성공_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-pick-alarm841128005'
              examples:
                pick-controller-test/알람설정한_픽_조회_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"id\" : 1,\r\
                    \n    \"sender\" : {\r\n      \"userId\" : 2,\r\n      \"nickname\"\
                    \ : \"보낸 사람\",\r\n      \"gender\" : \"M\",\r\n      \"campusName\"\
                    \ : \"광주\",\r\n      \"campusSection\" : 1,\r\n      \"campusDescription\"\
                    \ : \"자바 전공\",\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n      \"cohort\" : 1\r\n    },\r\n    \"receiver\" : {\r\n\
                    \      \"userId\" : 3,\r\n      \"nickname\" : \"받은 사람\",\r\n\
                    \      \"gender\" : \"M\",\r\n      \"campusName\" : \"광주\",\r\
                    \n      \"campusSection\" : 1,\r\n      \"campusDescription\"\
                    \ : \"자바 전공\",\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n      \"cohort\" : 1\r\n    },\r\n    \"question\" : {\r\n\
                    \      \"id\" : 1,\r\n      \"banCount\" : 0,\r\n      \"skipCount\"\
                    \ : 0,\r\n      \"category\" : {\r\n        \"id\" : 1,\r\n  \
                    \      \"name\" : \"TEST_CATEGORY\",\r\n        \"thumbnail\"\
                    \ : \"테스트 카테고리 썸네일\"\r\n      },\r\n      \"content\" : \"테스트\
                    \ 질문\"\r\n    },\r\n    \"alarm\" : false,\r\n    \"createdAt\"\
                    \ : \"2024-09-16T00:32:22.6833789\",\r\n    \"messageSend\" :\
                    \ false,\r\n    \"openedHints\" : [ ]\r\n  }\r\n}"
  /api/v1/pick/re-roll:
    patch:
      tags:
      - 픽
      summary: 사용자 리롤 픽코 사용 API
      description: 사용자를 리롤하면 픽코를 사용한다
      operationId: pick-controller-test/픽_사용자_리롤시_픽코_사용
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                pick-controller-test/픽_사용자_리롤시_픽코_사용:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/pick/receive:
    get:
      tags:
      - 픽
      summary: 받은 픽 조회 API
      description: 로그인된 사용자가 받은 픽을 조회한다.
      operationId: pick-controller-test/받은_픽_조회_성공_테스트
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-pick-receive737061263'
              examples:
                pick-controller-test/받은_픽_조회_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 3,\r\n    \"totalPages\" : 1,\r\n    \"size\" : 10,\r\n  \
                    \  \"content\" : [ {\r\n      \"id\" : 1,\r\n      \"sender\"\
                    \ : {\r\n        \"userId\" : null,\r\n        \"nickname\" :\
                    \ null,\r\n        \"gender\" : \"M\",\r\n        \"campusName\"\
                    \ : \"광주\",\r\n        \"campusSection\" : 1,\r\n        \"campusDescription\"\
                    \ : \"자바 전공\",\r\n        \"profileImage\" : null,\r\n       \
                    \ \"cohort\" : 1\r\n      },\r\n      \"receiver\" : {\r\n   \
                    \     \"userId\" : 3,\r\n        \"nickname\" : \"받은 사람\",\r\n\
                    \        \"gender\" : \"M\",\r\n        \"campusName\" : \"광주\"\
                    ,\r\n        \"campusSection\" : 1,\r\n        \"campusDescription\"\
                    \ : \"자바 전공\",\r\n        \"profileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n        \"cohort\" : 1\r\n      },\r\n      \"question\"\
                    \ : {\r\n        \"id\" : 1,\r\n        \"banCount\" : 0,\r\n\
                    \        \"skipCount\" : 0,\r\n        \"category\" : {\r\n  \
                    \        \"id\" : 1,\r\n          \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n          \"thumbnail\" : \"테스트 카테고리 썸네일\"\r\n        },\r\
                    \n        \"content\" : \"테스트 질문 1\"\r\n      },\r\n      \"alarm\"\
                    \ : false,\r\n      \"createdAt\" : \"2024-09-16T00:32:22.1341605\"\
                    ,\r\n      \"messageSend\" : false,\r\n      \"openedHints\" :\
                    \ [ null ]\r\n    }, {\r\n      \"id\" : 2,\r\n      \"sender\"\
                    \ : {\r\n        \"userId\" : null,\r\n        \"nickname\" :\
                    \ null,\r\n        \"gender\" : \"M\",\r\n        \"campusName\"\
                    \ : \"광주\",\r\n        \"campusSection\" : 1,\r\n        \"campusDescription\"\
                    \ : \"자바 전공\",\r\n        \"profileImage\" : null,\r\n       \
                    \ \"cohort\" : 1\r\n      },\r\n      \"receiver\" : {\r\n   \
                    \     \"userId\" : 3,\r\n        \"nickname\" : \"받은 사람\",\r\n\
                    \        \"gender\" : \"M\",\r\n        \"campusName\" : \"광주\"\
                    ,\r\n        \"campusSection\" : 1,\r\n        \"campusDescription\"\
                    \ : \"자바 전공\",\r\n        \"profileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n        \"cohort\" : 1\r\n      },\r\n      \"question\"\
                    \ : {\r\n        \"id\" : 2,\r\n        \"banCount\" : 0,\r\n\
                    \        \"skipCount\" : 0,\r\n        \"category\" : {\r\n  \
                    \        \"id\" : 2,\r\n          \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n          \"thumbnail\" : \"테스트 카테고리 썸네일\"\r\n        },\r\
                    \n        \"content\" : \"테스트 질문 2\"\r\n      },\r\n      \"alarm\"\
                    \ : false,\r\n      \"createdAt\" : \"2024-09-16T00:32:22.1451625\"\
                    ,\r\n      \"messageSend\" : false,\r\n      \"openedHints\" :\
                    \ [ null ]\r\n    }, {\r\n      \"id\" : 3,\r\n      \"sender\"\
                    \ : {\r\n        \"userId\" : null,\r\n        \"nickname\" :\
                    \ null,\r\n        \"gender\" : \"M\",\r\n        \"campusName\"\
                    \ : \"광주\",\r\n        \"campusSection\" : 1,\r\n        \"campusDescription\"\
                    \ : \"자바 전공\",\r\n        \"profileImage\" : null,\r\n       \
                    \ \"cohort\" : 1\r\n      },\r\n      \"receiver\" : {\r\n   \
                    \     \"userId\" : 3,\r\n        \"nickname\" : \"받은 사람\",\r\n\
                    \        \"gender\" : \"M\",\r\n        \"campusName\" : \"광주\"\
                    ,\r\n        \"campusSection\" : 1,\r\n        \"campusDescription\"\
                    \ : \"자바 전공\",\r\n        \"profileImage\" : \"테스트 프로필 이미지 URL\"\
                    ,\r\n        \"cohort\" : 1\r\n      },\r\n      \"question\"\
                    \ : {\r\n        \"id\" : 3,\r\n        \"banCount\" : 0,\r\n\
                    \        \"skipCount\" : 0,\r\n        \"category\" : {\r\n  \
                    \        \"id\" : 3,\r\n          \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n          \"thumbnail\" : \"테스트 카테고리 썸네일\"\r\n        },\r\
                    \n        \"content\" : \"테스트 질문 3\"\r\n      },\r\n      \"alarm\"\
                    \ : false,\r\n      \"createdAt\" : \"2024-09-16T00:32:22.1481629\"\
                    ,\r\n      \"messageSend\" : false,\r\n      \"openedHints\" :\
                    \ [ null ]\r\n    } ],\r\n    \"number\" : 0,\r\n    \"sort\"\
                    \ : {\r\n      \"empty\" : true,\r\n      \"sorted\" : false,\r\
                    \n      \"unsorted\" : true\r\n    },\r\n    \"numberOfElements\"\
                    \ : 3,\r\n    \"pageable\" : {\r\n      \"pageNumber\" : 0,\r\n\
                    \      \"pageSize\" : 10,\r\n      \"sort\" : {\r\n        \"\
                    empty\" : true,\r\n        \"sorted\" : false,\r\n        \"unsorted\"\
                    \ : true\r\n      },\r\n      \"offset\" : 0,\r\n      \"unpaged\"\
                    \ : false,\r\n      \"paged\" : true\r\n    },\r\n    \"first\"\
                    \ : true,\r\n    \"last\" : true,\r\n    \"empty\" : false\r\n\
                    \  }\r\n}"
  /api/v1/pick/{pickId}:
    patch:
      tags:
      - 픽
      summary: 픽 알람 설정 API
      description: 사용자가 선택한 픽의 알람을 설정한다.
      operationId: pick-controller-test/픽_알람_설정_테스트
      parameters:
      - name: pickId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                pick-controller-test/픽_알람_설정_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/questions/bans:
    get:
      tags:
      - 질문 차단
      summary: 유저가 차단한 질문 조회 API
      description: 유저가 차단한 질문들을 조회한다.
      operationId: question-controller-test/유저가_차단한_질문들을_조회하는_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-category-categoryId-1400495098'
              examples:
                question-controller-test/유저가_차단한_질문들을_조회하는_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  } ]\r\n}"
  /api/v1/questions/categories:
    get:
      tags:
      - 질문
      summary: 질문 카테고리 목록 조회 API
      description: 질문 카테고리 목록을 조회한다.
      operationId: question-controller-test/질문_카테고리_목록_전체_조회
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-categories790849166'
              examples:
                question-controller-test/질문_카테고리_목록_전체_조회:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"name\" : \"연애/데이트\",\r\n    \"thumbnail\" : \"exampleImage\"\
                    \r\n  }, {\r\n    \"id\" : 1,\r\n    \"name\" : \"친구\",\r\n  \
                    \  \"thumbnail\" : \"exampleImage\"\r\n  }, {\r\n    \"id\" :\
                    \ 1,\r\n    \"name\" : \"가족\",\r\n    \"thumbnail\" : \"exampleImage\"\
                    \r\n  } ]\r\n}"
  /api/v1/questions/me:
    get:
      tags:
      - 질문
      summary: 내가 생성한 질문 조회 API
      description: 내가 생성한 질문을 조회한다.
      operationId: question-controller-test/내가_생성한_질문_조회_테스트
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-me-1762280047'
              examples:
                question-controller-test/내가_생성한_질문_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"category\" : {\r\n      \"id\" : 1,\r\n      \"name\"\
                    \ : \"TEST_CATEGORY\",\r\n      \"thumbnail\" : \"http://thumbnail.com\"\
                    \r\n    },\r\n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\"\
                    \ : 1,\r\n    \"category\" : {\r\n      \"id\" : 1,\r\n      \"\
                    name\" : \"TEST_CATEGORY\",\r\n      \"thumbnail\" : \"http://thumbnail.com\"\
                    \r\n    },\r\n    \"content\" : \"질문 2\"\r\n  }, {\r\n    \"id\"\
                    \ : 1,\r\n    \"category\" : {\r\n      \"id\" : 1,\r\n      \"\
                    name\" : \"TEST_CATEGORY\",\r\n      \"thumbnail\" : \"http://thumbnail.com\"\
                    \r\n    },\r\n    \"content\" : \"질문 3\"\r\n  } ]\r\n}"
  /api/v1/questions/pick:
    get:
      tags:
      - 질문
      summary: 싸픽에서 사용할 질문 조회 API
      description: 싸픽에서 사용할 질문들을 조회한다. 총 15개 질문 조회 (내부 중복 제거 알고리즘 적용)
      operationId: question-controller-test/
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-category-categoryId-1400495098'
              examples:
                question-controller-test/싸픽에서_사용할_질문_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  } ]\r\n}"
                question-controller-test/픽_하기_위한_사용자_맞춤형_질문_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  } ]\r\n}"
  /api/v1/questions/{questionId}:
    get:
      tags:
      - 질문
      summary: 질문 ID로 질문 조회 API
      description: 질문 ID로 질문을 조회한다.
      operationId: question-controller-test/질문_id_조회_테스트
      parameters:
      - name: questionId
        in: path
        description: 질문 ID
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-questionId-851306843'
              examples:
                question-controller-test/질문_id_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"id\" : 1,\r\
                    \n    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }\r\n}"
    delete:
      tags:
      - 질문
      summary: 질문 삭제 API
      description: 내가 생서한 질문 중 픽이 없는 질문을 삭제한다.
      operationId: question-controller-test/생성한_질문_삭제_성공_테스트
      parameters:
      - name: questionId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                question-controller-test/생성한_질문_삭제_성공_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/ranking/all:
    get:
      tags:
      - 랭킹
      summary: 모든 랭킹 조회 API
      description: 모든 랭킹을 조회한다.
      operationId: ranking-controller-test/get-all-rankings
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-ranking-all-631883855'
              examples:
                ranking-controller-test/get-all-rankings:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"topPickReceivers\"\
                    \ : [ {\r\n      \"user\" : {\r\n        \"name\" : \"name1\"\
                    ,\r\n        \"cohort\" : 11,\r\n        \"campusName\" : \"광주\
                    \",\r\n        \"section\" : 1,\r\n        \"profileImage\" :\
                    \ \"\"\r\n      },\r\n      \"count\" : 10\r\n    }, {\r\n   \
                    \   \"user\" : {\r\n        \"name\" : \"name2\",\r\n        \"\
                    cohort\" : 11,\r\n        \"campusName\" : \"서울\",\r\n       \
                    \ \"section\" : 2,\r\n        \"profileImage\" : \"\"\r\n    \
                    \  },\r\n      \"count\" : 9\r\n    }, {\r\n      \"user\" : {\r\
                    \n        \"name\" : \"name3\",\r\n        \"cohort\" : 12,\r\n\
                    \        \"campusName\" : \"구미\",\r\n        \"section\" : 3,\r\
                    \n        \"profileImage\" : \"\"\r\n      },\r\n      \"count\"\
                    \ : 8\r\n    } ],\r\n    \"topPickSenders\" : [ {\r\n      \"\
                    user\" : {\r\n        \"name\" : \"name1\",\r\n        \"cohort\"\
                    \ : 11,\r\n        \"campusName\" : \"광주\",\r\n        \"section\"\
                    \ : 1,\r\n        \"profileImage\" : \"\"\r\n      },\r\n    \
                    \  \"count\" : 10\r\n    }, {\r\n      \"user\" : {\r\n      \
                    \  \"name\" : \"name2\",\r\n        \"cohort\" : 11,\r\n     \
                    \   \"campusName\" : \"서울\",\r\n        \"section\" : 2,\r\n \
                    \       \"profileImage\" : \"\"\r\n      },\r\n      \"count\"\
                    \ : 9\r\n    }, {\r\n      \"user\" : {\r\n        \"name\" :\
                    \ \"name3\",\r\n        \"cohort\" : 12,\r\n        \"campusName\"\
                    \ : \"구미\",\r\n        \"section\" : 3,\r\n        \"profileImage\"\
                    \ : \"\"\r\n      },\r\n      \"count\" : 8\r\n    } ],\r\n  \
                    \  \"topMessageReceivers\" : [ {\r\n      \"user\" : {\r\n   \
                    \     \"name\" : \"name1\",\r\n        \"cohort\" : 11,\r\n  \
                    \      \"campusName\" : \"광주\",\r\n        \"section\" : 1,\r\n\
                    \        \"profileImage\" : \"\"\r\n      },\r\n      \"count\"\
                    \ : 10\r\n    }, {\r\n      \"user\" : {\r\n        \"name\" :\
                    \ \"name2\",\r\n        \"cohort\" : 11,\r\n        \"campusName\"\
                    \ : \"서울\",\r\n        \"section\" : 2,\r\n        \"profileImage\"\
                    \ : \"\"\r\n      },\r\n      \"count\" : 9\r\n    }, {\r\n  \
                    \    \"user\" : {\r\n        \"name\" : \"name3\",\r\n       \
                    \ \"cohort\" : 12,\r\n        \"campusName\" : \"구미\",\r\n   \
                    \     \"section\" : 3,\r\n        \"profileImage\" : \"\"\r\n\
                    \      },\r\n      \"count\" : 8\r\n    } ],\r\n    \"topMessageSenders\"\
                    \ : [ {\r\n      \"user\" : {\r\n        \"name\" : \"name1\"\
                    ,\r\n        \"cohort\" : 11,\r\n        \"campusName\" : \"광주\
                    \",\r\n        \"section\" : 1,\r\n        \"profileImage\" :\
                    \ \"\"\r\n      },\r\n      \"count\" : 10\r\n    }, {\r\n   \
                    \   \"user\" : {\r\n        \"name\" : \"name2\",\r\n        \"\
                    cohort\" : 11,\r\n        \"campusName\" : \"서울\",\r\n       \
                    \ \"section\" : 2,\r\n        \"profileImage\" : \"\"\r\n    \
                    \  },\r\n      \"count\" : 9\r\n    }, {\r\n      \"user\" : {\r\
                    \n        \"name\" : \"name3\",\r\n        \"cohort\" : 12,\r\n\
                    \        \"campusName\" : \"구미\",\r\n        \"section\" : 3,\r\
                    \n        \"profileImage\" : \"\"\r\n      },\r\n      \"count\"\
                    \ : 8\r\n    } ],\r\n    \"topSpendPickcoUsers\" : [ {\r\n   \
                    \   \"user\" : {\r\n        \"name\" : \"name1\",\r\n        \"\
                    cohort\" : 11,\r\n        \"campusName\" : \"광주\",\r\n       \
                    \ \"section\" : 1,\r\n        \"profileImage\" : \"\"\r\n    \
                    \  },\r\n      \"count\" : 10\r\n    }, {\r\n      \"user\" :\
                    \ {\r\n        \"name\" : \"name2\",\r\n        \"cohort\" : 11,\r\
                    \n        \"campusName\" : \"서울\",\r\n        \"section\" : 2,\r\
                    \n        \"profileImage\" : \"\"\r\n      },\r\n      \"count\"\
                    \ : 9\r\n    }, {\r\n      \"user\" : {\r\n        \"name\" :\
                    \ \"name3\",\r\n        \"cohort\" : 12,\r\n        \"campusName\"\
                    \ : \"구미\",\r\n        \"section\" : 3,\r\n        \"profileImage\"\
                    \ : \"\"\r\n      },\r\n      \"count\" : 8\r\n    } ],\r\n  \
                    \  \"topReservePickcoUsers\" : [ {\r\n      \"user\" : {\r\n \
                    \       \"name\" : \"name1\",\r\n        \"cohort\" : 11,\r\n\
                    \        \"campusName\" : \"광주\",\r\n        \"section\" : 1,\r\
                    \n        \"profileImage\" : \"\"\r\n      },\r\n      \"count\"\
                    \ : 10\r\n    }, {\r\n      \"user\" : {\r\n        \"name\" :\
                    \ \"name2\",\r\n        \"cohort\" : 11,\r\n        \"campusName\"\
                    \ : \"서울\",\r\n        \"section\" : 2,\r\n        \"profileImage\"\
                    \ : \"\"\r\n      },\r\n      \"count\" : 9\r\n    }, {\r\n  \
                    \    \"user\" : {\r\n        \"name\" : \"name3\",\r\n       \
                    \ \"cohort\" : 12,\r\n        \"campusName\" : \"구미\",\r\n   \
                    \     \"section\" : 3,\r\n        \"profileImage\" : \"\"\r\n\
                    \      },\r\n      \"count\" : 8\r\n    } ],\r\n    \"questionUserRanking\"\
                    \ : [ {\r\n      \"questionId\" : 1,\r\n      \"questionContent\"\
                    \ : \"question1\",\r\n      \"userId\" : 1,\r\n      \"name\"\
                    \ : \"name1\",\r\n      \"profileImage\" : \"\",\r\n      \"cohort\"\
                    \ : 11,\r\n      \"campusName\" : \"광주\",\r\n      \"section\"\
                    \ : 1,\r\n      \"count\" : 10\r\n    }, {\r\n      \"questionId\"\
                    \ : 2,\r\n      \"questionContent\" : \"question2\",\r\n     \
                    \ \"userId\" : 2,\r\n      \"name\" : \"name2\",\r\n      \"profileImage\"\
                    \ : \"\",\r\n      \"cohort\" : 12,\r\n      \"campusName\" :\
                    \ \"서울\",\r\n      \"section\" : 2,\r\n      \"count\" : 9\r\n\
                    \    }, {\r\n      \"questionId\" : 3,\r\n      \"questionContent\"\
                    \ : \"question3\",\r\n      \"userId\" : 3,\r\n      \"name\"\
                    \ : \"name3\",\r\n      \"profileImage\" : \"\",\r\n      \"cohort\"\
                    \ : 13,\r\n      \"campusName\" : \"구미\",\r\n      \"section\"\
                    \ : 3,\r\n      \"count\" : 8\r\n    } ]\r\n  }\r\n}"
  /api/v1/user-ban/{userId}:
    post:
      tags:
      - 유저 차단
      summary: 유저를 차단한다.
      description: 유저를 차단하는 API
      operationId: user-ban-controller-test/유저를_차단하는_테스트
      parameters:
      - name: userId
        in: path
        description: 차단할 유저의 ID
        required: true
        schema:
          type: number
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                user-ban-controller-test/유저를_차단하는_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 201,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
    delete:
      tags:
      - 유저 차단
      summary: 유저 차단을 해제한다.
      description: 유저 차단 해제 API
      operationId: user-ban-controller-test/차단된_유저를_차단해제하는_테스트
      parameters:
      - name: userId
        in: path
        description: 차단 해제할 유저의 ID
        required: true
        schema:
          type: number
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                user-ban-controller-test/차단된_유저를_차단해제하는_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/user/me:
    get:
      tags:
      - 유저
      summary: 로그인한 유저 정보를 조회한다.
      description: 로그인한 유저 정보 조회
      operationId: user-controller-test/find-current-user
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user-me1871948326'
              examples:
                user-controller-test/find-current-user:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"id\" : 1,\r\
                    \n    \"username\" : \"user\",\r\n    \"name\" : \"김싸피\",\r\n\
                    \    \"profileImage\" : \"profileImage\",\r\n    \"gender\" :\
                    \ \"M\",\r\n    \"cohort\" : 11,\r\n    \"campusName\" : \"광주\"\
                    ,\r\n    \"section\" : 2,\r\n    \"pickco\" : 0,\r\n    \"pickCount\"\
                    \ : 10,\r\n    \"followingCount\" : 100,\r\n    \"hints\" : [\
                    \ ]\r\n  }\r\n}"
  /api/v1/user/pickco:
    get:
      tags:
      - 유저
      summary: 로그인한 유저 정보를 조회한다.
      description: 로그인한 유저의 픽코 조회 API
      operationId: user-controller-test/find-current-user-pickco
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user-pickco-1948401651'
              examples:
                user-controller-test/find-current-user-pickco:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"pickco\" :\
                    \ 100\r\n  }\r\n}"
  /api/v1/user/pickco-log:
    get:
      tags:
      - 유저
      summary: 픽코 로그 조회 API
      description: 로그인한 사용자의 픽코 로그를 조회한다.
      operationId: user-controller-test/get-pickco-logs
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user-pickco-log2003547535'
              examples:
                user-controller-test/get-pickco-logs:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 4,\r\n    \"totalPages\" : 1,\r\n    \"size\" : 10,\r\n  \
                    \  \"content\" : [ {\r\n      \"id\" : 1,\r\n      \"pickcoLogType\"\
                    \ : \"SIGN_UP\",\r\n      \"change\" : 300,\r\n      \"remain\"\
                    \ : 300,\r\n      \"createdAt\" : \"2024-09-16T00:33:09.675485500\"\
                    \r\n    }, {\r\n      \"id\" : 1,\r\n      \"pickcoLogType\" :\
                    \ \"PICK\",\r\n      \"change\" : 30,\r\n      \"remain\" : 330,\r\
                    \n      \"createdAt\" : \"2024-09-16T00:33:09.675485500\"\r\n\
                    \    }, {\r\n      \"id\" : 1,\r\n      \"pickcoLogType\" : \"\
                    HINT_OPEN\",\r\n      \"change\" : -100,\r\n      \"remain\" :\
                    \ 230,\r\n      \"createdAt\" : \"2024-09-16T00:33:09.675485500\"\
                    \r\n    }, {\r\n      \"id\" : 1,\r\n      \"pickcoLogType\" :\
                    \ \"MESSAGE\",\r\n      \"change\" : -20,\r\n      \"remain\"\
                    \ : 210,\r\n      \"createdAt\" : \"2024-09-16T00:33:09.675485500\"\
                    \r\n    } ],\r\n    \"number\" : 0,\r\n    \"sort\" : {\r\n  \
                    \    \"empty\" : true,\r\n      \"sorted\" : false,\r\n      \"\
                    unsorted\" : true\r\n    },\r\n    \"numberOfElements\" : 4,\r\
                    \n    \"pageable\" : {\r\n      \"pageNumber\" : 0,\r\n      \"\
                    pageSize\" : 10,\r\n      \"sort\" : {\r\n        \"empty\" :\
                    \ true,\r\n        \"sorted\" : false,\r\n        \"unsorted\"\
                    \ : true\r\n      },\r\n      \"offset\" : 0,\r\n      \"unpaged\"\
                    \ : false,\r\n      \"paged\" : true\r\n    },\r\n    \"first\"\
                    \ : true,\r\n    \"last\" : true,\r\n    \"empty\" : false\r\n\
                    \  }\r\n}"
  /api/v1/user/search:
    get:
      tags:
      - 유저
      summary: 친구로 추가할 사용자 목록 조회 API
      description: 친구목록에 추가할 사용자를 검색합니다.
      operationId: user-controller-test/search-user-profile
      parameters:
      - name: q
        in: query
        description: 검색어
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user-search2123202168'
              examples:
                user-controller-test/search-user-profile:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : {\r\n    \"totalElements\"\
                    \ : 4,\r\n    \"totalPages\" : 1,\r\n    \"size\" : 10,\r\n  \
                    \  \"content\" : [ {\r\n      \"userId\" : 2,\r\n      \"name\"\
                    \ : \"김싸일\",\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\
                    \n      \"cohort\" : 1,\r\n      \"campusSection\" : 1,\r\n  \
                    \    \"follow\" : false,\r\n      \"sameCampus\" : false\r\n \
                    \   }, {\r\n      \"userId\" : 3,\r\n      \"name\" : \"김싸이\"\
                    ,\r\n      \"profileImage\" : \"테스트 프로필 이미지 URL\",\r\n      \"\
                    cohort\" : 1,\r\n      \"campusSection\" : 1,\r\n      \"follow\"\
                    \ : false,\r\n      \"sameCampus\" : false\r\n    }, {\r\n   \
                    \   \"userId\" : 4,\r\n      \"name\" : \"김싸삼\",\r\n      \"profileImage\"\
                    \ : \"테스트 프로필 이미지 URL\",\r\n      \"cohort\" : 1,\r\n      \"\
                    campusSection\" : 1,\r\n      \"follow\" : false,\r\n      \"\
                    sameCampus\" : false\r\n    }, {\r\n      \"userId\" : 5,\r\n\
                    \      \"name\" : \"김싸사\",\r\n      \"profileImage\" : \"테스트 프\
                    로필 이미지 URL\",\r\n      \"cohort\" : 1,\r\n      \"campusSection\"\
                    \ : 1,\r\n      \"follow\" : false,\r\n      \"sameCampus\" :\
                    \ false\r\n    } ],\r\n    \"number\" : 0,\r\n    \"sort\" : {\r\
                    \n      \"empty\" : true,\r\n      \"sorted\" : false,\r\n   \
                    \   \"unsorted\" : true\r\n    },\r\n    \"numberOfElements\"\
                    \ : 4,\r\n    \"pageable\" : {\r\n      \"pageNumber\" : 0,\r\n\
                    \      \"pageSize\" : 10,\r\n      \"sort\" : {\r\n        \"\
                    empty\" : true,\r\n        \"sorted\" : false,\r\n        \"unsorted\"\
                    \ : true\r\n      },\r\n      \"offset\" : 0,\r\n      \"unpaged\"\
                    \ : false,\r\n      \"paged\" : true\r\n    },\r\n    \"first\"\
                    \ : true,\r\n    \"last\" : true,\r\n    \"empty\" : false\r\n\
                    \  }\r\n}"
  /api/v1/campus/search/description:
    get:
      tags:
      - 유저
      summary: 캠퍼스 반 조회 API
      description: 특정 캠퍼스에 해당된 반 설명으로 반 정보를 조회한다.
      operationId: campus-controller-test/캠퍼스에_해당된_반_설명으로_조회
      parameters:
      - name: description
        in: query
        description: 조회할 반 설명
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-campus-search-name1806939605'
              examples:
                campus-controller-test/캠퍼스에_해당된_반_설명으로_조회:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"name\" :\
                    \ \"광주\",\r\n    \"section\" : 1,\r\n    \"description\" : \"비\
                    전공\"\r\n  }, {\r\n    \"name\" : \"광주\",\r\n    \"section\" :\
                    \ 2,\r\n    \"description\" : \"비전공\"\r\n  }, {\r\n    \"name\"\
                    \ : \"광주\",\r\n    \"section\" : 3,\r\n    \"description\" : \"\
                    비전공\"\r\n  } ]\r\n}"
  /api/v1/campus/search/name:
    get:
      tags:
      - 유저
      summary: 캠퍼스 조회 API
      description: 특정 캠퍼스에 해당된 반 정보를 캠퍼스 이름으로 조회한다.
      operationId: campus-controller-test/캠퍼스에_해당된_반_정보_이름으로_조회
      parameters:
      - name: name
        in: query
        description: 조회할 캠퍼스 이름
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-campus-search-name1806939605'
              examples:
                campus-controller-test/캠퍼스에_해당된_반_정보_이름으로_조회:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"name\" :\
                    \ \"광주\",\r\n    \"section\" : 1,\r\n    \"description\" : \"비\
                    전공\"\r\n  }, {\r\n    \"name\" : \"광주\",\r\n    \"section\" :\
                    \ 2,\r\n    \"description\" : \"비전공\"\r\n  }, {\r\n    \"name\"\
                    \ : \"광주\",\r\n    \"section\" : 3,\r\n    \"description\" : \"\
                    비전공\"\r\n  }, {\r\n    \"name\" : \"광주\",\r\n    \"section\" :\
                    \ 4,\r\n    \"description\" : \"전공\"\r\n  }, {\r\n    \"name\"\
                    \ : \"광주\",\r\n    \"section\" : 5,\r\n    \"description\" : \"\
                    전공\"\r\n  }, {\r\n    \"name\" : \"광주\",\r\n    \"section\" :\
                    \ 6,\r\n    \"description\" : \"전공\"\r\n  } ]\r\n}"
  /api/v1/message/{messageId}/receive:
    delete:
      tags:
      - 쪽지
      summary: 받은 메시지 삭제 API
      description: 자신이 받은 메시지를 삭제한다.
      operationId: message-controller-test/받은_메시지_삭제_테스트
      parameters:
      - name: messageId
        in: path
        description: 메시지 ID
        required: true
        schema:
          type: number
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-message-messageId-receive486549215'
              examples:
                message-controller-test/받은_메시지_삭제_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/message/{messageId}/send:
    delete:
      tags:
      - 쪽지
      summary: 보낸 메시지 삭제 API
      description: 자신이 보낸 메시지를 삭제한다.
      operationId: message-controller-test/보낸_메시지_삭제_테스트
      parameters:
      - name: messageId
        in: path
        description: 메시지 ID
        required: true
        schema:
          type: number
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-message-messageId-receive486549215'
              examples:
                message-controller-test/보낸_메시지_삭제_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
  /api/v1/questions/category/{categoryId}:
    get:
      tags:
      - 질문
      summary: 카테고리별 질문 조회 API
      description: 카테고리 ID를 기준으로 카테고리에 속한 질문들을 조회한다.
      operationId: question-controller-test/카테고리별_질문_조회_테스트
      parameters:
      - name: categoryId
        in: path
        description: 질문 ID
        required: true
        schema:
          type: number
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-questions-category-categoryId-1400495098'
              examples:
                question-controller-test/카테고리별_질문_조회_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : [ {\r\n    \"id\" : 1,\r\
                    \n    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 1\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 2\"\r\n  }, {\r\n    \"id\" : 1,\r\n\
                    \    \"banCount\" : 0,\r\n    \"skipCount\" : 0,\r\n    \"category\"\
                    \ : {\r\n      \"id\" : 1,\r\n      \"name\" : \"TEST_CATEGORY\"\
                    ,\r\n      \"thumbnail\" : \"http://thumbnail.com\"\r\n    },\r\
                    \n    \"content\" : \"질문 3\"\r\n  } ]\r\n}"
  /api/v1/questions/{questionId}/ban:
    post:
      tags:
      - 질문 차단
      summary: 질문 차단 API
      description: 질문을 차단한다.
      operationId: question-controller-test/질문_차단_테스트
      parameters:
      - name: questionId
        in: path
        description: 차단할 질문의 ID
        required: true
        schema:
          type: number
      responses:
        "201":
          description: "201"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                question-controller-test/질문_차단_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 201,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
    delete:
      tags:
      - 질문 차단
      summary: 질문 차단 해제 API
      description: 질문 차단을 해제한다.
      operationId: question-controller-test/차단된_질문을_차단해제하는_테스트
      parameters:
      - name: questionId
        in: path
        description: 차단 해제할 질문의 ID
        required: true
        schema:
          type: number
      responses:
        "204":
          description: "204"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/api-v1-user566855735'
              examples:
                question-controller-test/차단된_질문을_차단해제하는_테스트:
                  value: "{\r\n  \"success\" : true,\r\n  \"status\" : 200,\r\n  \"\
                    message\" : \"success\",\r\n  \"data\" : null\r\n}"
components:
  schemas:
    api-v1-questions-category-categoryId-1400495098:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              banCount:
                type: number
                description: 질문을 차단한 횟수
              id:
                type: number
                description: 질문 ID
              category:
                type: object
                properties:
                  thumbnail:
                    type: string
                    description: 질문 카테고리 썸네일
                  name:
                    type: string
                    description: 질문 카테고리명
                  id:
                    type: number
                    description: 질문 카테고리 ID
              skipCount:
                type: number
                description: 질문을 스킵한 횟수
              content:
                type: string
                description: 질문 내용
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-questions-1057590921:
      type: object
      properties:
        content:
          type: string
          description: 질문 내용
        categoryId:
          type: number
          description: 질문 카테고리 ID
    api-v1-user-ban1379380927:
      type: object
      properties:
        data:
          type: array
          description: 팔로우한 유저 목록
          items:
            type: object
            properties:
              campusSection:
                type: number
                description: 캠퍼스 반 정보
              gender:
                type: string
                description: 유저 성별
              campusDescription:
                type: string
                description: 전공 관련 정보
              campusName:
                type: string
                description: 캠퍼스 지역
              nickname:
                type: string
                description: 유저 닉네임
              cohort:
                type: number
                description: 기수 정보
              profileImage:
                type: string
                description: 프로필 이미지 URL
              userId:
                type: number
                description: 유저 식별자
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-pick705871580:
      type: object
      properties:
        data:
          type: object
          properties:
            blockCount:
              type: number
              description: 차단한 횟수
            pickCount:
              type: number
              description: 픽한 횟수
            index:
              type: number
              description: 현재 질문 리스트의 인덱스 번호
            cooltime:
              type: boolean
              description: 쿨타임 여부
            passCount:
              type: number
              description: 패스한 횟수
        success:
          type: boolean
          description: 응답 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 상태 코드
    api-v1-user-pickco-1948401651:
      type: object
      properties:
        data:
          type: object
          properties:
            pickco:
              type: number
              description: 식별자
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-message1452958091:
      type: object
      properties:
        pickId:
          type: number
          description: 픽 ID
        content:
          type: string
          description: 메시지 내용
    api-v1-attendance1367340396:
      type: object
      properties:
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-location1151677936:
      type: object
      properties:
        data:
          type: object
          properties:
            count:
              type: number
              description: 사용자가 선택 가능한 사용자 개수
            locations:
              type: array
              items:
                type: object
                properties:
                  distance:
                    type: number
                    description: 거리
                  alarm:
                    type: boolean
                    description: 알람 여부
                  position:
                    type: object
                    properties:
                      x:
                        type: number
                        description: 위도
                      "y":
                        type: number
                        description: 경도
                  profileImage:
                    type: string
                    description: 프로필 이미지
                  username:
                    type: string
                    description: 사용자 이름
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-pick-1299940846:
      type: object
      properties:
        data:
          type: object
          properties:
            blockCount:
              type: number
              description: 차단한 횟수
            pickCount:
              type: number
              description: 픽한 횟수
            index:
              type: number
              description: 현재 질문 리스트의 인덱스 번호
            endTime:
              type: object
              description: 쿨타임 종료 시간
            cooltime:
              type: boolean
              description: 쿨타임 여부
            passCount:
              type: number
              description: 패스한 횟수
        success:
          type: boolean
          description: 응답 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 상태 코드
    api-v1-attendance343903016:
      type: object
      properties:
        data:
          type: object
          properties:
            todayChecked:
              type: boolean
              description: 오늘 출석 여부
            streak:
              type: number
              description: 연속 출석 일수
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-pick1853852005:
      type: object
      properties:
        questionId:
          type: number
          description: 질문 ID
        receiverId:
          type: number
          description: 픽 받을 사람 ID
        index:
          type: number
          description: 현재 질문 리스트의 인덱스 번호
        status:
          type: string
          description: "픽 상태 (선택, 패스, 차단)"
    api-v1-follow1854707152:
      type: object
      properties:
        data:
          type: array
          description: 팔로우한 유저 목록
          items:
            type: object
            properties:
              campusSection:
                type: number
                description: 캠퍼스 반 정보
              sameCampus:
                type: boolean
                description: 유저 동일 캠퍼스 여부
              name:
                type: string
                description: 유저 닉네임
              cohort:
                type: number
                description: 기수 정보
              profileImage:
                type: string
                description: 프로필 이미지 URL
              follow:
                type: boolean
                description: 유저 팔로우 여부
              userId:
                type: number
                description: 유저 식별자
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-user-611735980:
      type: object
      properties:
        residentialArea:
          type: string
          description: 거주지역
        major:
          type: string
          description: 전공
        campusSection:
          type: number
          description: 캠퍼스 반
        gender:
          type: string
          description: 성별
        interest:
          type: string
          description: 관심사
        campusName:
          type: string
          description: 캠퍼스 이름
        name:
          type: string
          description: 사용자 이름
        birth:
          type: string
          description: 생년월일
        mbti:
          type: string
          description: MBTI
        cohort:
          type: number
          description: 기수
    api-v1-message-receive1511771333:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            numberOfElements:
              type: number
              description: 페이지 내 요소 수
            last:
              type: boolean
              description: 마지막 페이지 여부
            size:
              type: number
              description: 페이지당 요소 수
            totalPages:
              type: number
              description: 총 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이지 여부
                pageNumber:
                  type: number
                  description: 페이지 번호
                offset:
                  type: number
                  description: 오프셋
                pageSize:
                  type: number
                  description: 페이지 크기
                unpaged:
                  type: boolean
                  description: 비페이지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬되지 않음 여부
                    sorted:
                      type: boolean
                      description: 정렬 여부
                    empty:
                      type: boolean
                      description: 정렬 정보 비어 있음 여부
                  description: 정렬 정보
              description: 페이지 정보
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬되지 않음 여부
                sorted:
                  type: boolean
                  description: 정렬 여부
                empty:
                  type: boolean
                  description: 정렬 정보 비어 있음 여부
              description: 정렬 정보
            content:
              type: array
              description: 메시지 데이터 목록
              items:
                type: object
                properties:
                  questionContent:
                    type: string
                    description: 메시지 받은 질문 내용
                  senderSection:
                    type: number
                    description: 보낸 사람 섹션
                  receiverGender:
                    type: string
                    description: 받은 사람 성별
                  receiverName:
                    type: string
                    description: 받은 사람 정보 (본인)
                  receiverCampus:
                    type: string
                    description: 받은 사람 캠퍼스
                  receiverCohort:
                    type: number
                    description: 받은 사람 기수
                  senderProfileImage:
                    type: string
                    description: 보낸 사람 프로필 이미지
                  content:
                    type: string
                    description: 메시지 내용
                  receiverProfileImage:
                    type: string
                    description: 받은 사람 프로필 이미지
                  senderGender:
                    type: string
                    description: 보낸 사람 성별
                  createdAt:
                    type: string
                    description: 받은 일시
                  senderName:
                    type: string
                    description: 보낸 사람 정보 (익명 처리)
                  senderId:
                    type: number
                    description: 메시지 보낸 사람 ID
                  senderCampus:
                    type: string
                    description: 보낸 사람 캠퍼스
                  senderCohort:
                    type: number
                    description: 보낸 사람 기수
                  receiverSection:
                    type: number
                    description: 받은 사람 섹션
                  id:
                    type: number
                    description: 메시지 ID
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 비어 있음 여부
            totalElements:
              type: number
              description: 총 요소 수
          description: 응답 데이터
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: HTTP 상태 코드
    api-v1-message-messageId-receive486549215:
      type: object
    api-v1-location-488115322:
      type: object
      properties:
        username:
          type: string
          description: 선택한 사용자 이름
    api-v1-pick-receive737061263:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            numberOfElements:
              type: number
              description: 페이지 내 요소 수
            last:
              type: boolean
              description: 마지막 페이지 여부
            size:
              type: number
              description: 페이지당 요소 수
            totalPages:
              type: number
              description: 총 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이지 여부
                pageNumber:
                  type: number
                  description: 페이지 번호
                offset:
                  type: number
                  description: 오프셋
                pageSize:
                  type: number
                  description: 페이지 크기
                unpaged:
                  type: boolean
                  description: 비페이지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬되지 않음 여부
                    sorted:
                      type: boolean
                      description: 정렬 여부
                    empty:
                      type: boolean
                      description: 정렬 정보 비어 있음 여부
                  description: 정렬 정보
              description: 페이지 정보
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬되지 않음 여부
                sorted:
                  type: boolean
                  description: 정렬 여부
                empty:
                  type: boolean
                  description: 정렬 정보 비어 있음 여부
              description: 정렬 정보
            content:
              type: array
              description: 픽 데이터 목록
              items:
                type: object
                properties:
                  createdAt:
                    type: string
                    description: 생성 일시
                  question:
                    type: object
                    properties:
                      banCount:
                        type: number
                        description: 질문 금지 수
                      id:
                        type: number
                        description: 질문 ID
                      category:
                        type: object
                        properties:
                          thumbnail:
                            type: string
                            description: 질문 카테고리 썸네일
                          name:
                            type: string
                            description: 질문 카테고리 이름
                          id:
                            type: number
                            description: 질문 카테고리 ID
                        description: 질문 카테고리
                      skipCount:
                        type: number
                        description: 질문 스킵 수
                      content:
                        type: string
                        description: 질문 내용
                    description: 질문 정보
                  receiver:
                    type: object
                    properties:
                      campusSection:
                        type: number
                        description: 수신자 캠퍼스 섹션
                      gender:
                        type: string
                        description: 수신자 성별
                      campusDescription:
                        type: string
                        description: 수신자 캠퍼스 설명
                      campusName:
                        type: string
                        description: 수신자 캠퍼스 이름
                      nickname:
                        type: string
                        description: 수신자 닉네임
                      cohort:
                        type: number
                        description: 수신자 코호트
                      profileImage:
                        type: string
                        description: 수신자 프로필 이미지
                      userId:
                        type: number
                        description: 수신자 ID
                    description: 수신자 정보
                  sender:
                    type: object
                    properties:
                      campusSection:
                        type: number
                        description: 송신자 캠퍼스 섹션
                      gender:
                        type: string
                        description: 송신자 성별
                      campusDescription:
                        type: string
                        description: 송신자 캠퍼스 설명
                      campusName:
                        type: string
                        description: 송신자 캠퍼스 이름
                      nickname:
                        type: string
                        description: 송신자 닉네임
                      cohort:
                        type: number
                        description: 송신자 코호트
                      profileImage:
                        type: string
                        description: 송신자 프로필 이미지
                      userId:
                        type: number
                        description: 송신자 ID
                    description: 송신자 정보
                  alarm:
                    type: boolean
                    description: 알림 여부
                  messageSend:
                    type: boolean
                    description: 메시지 전송 여부
                  id:
                    type: number
                    description: 픽 ID
                  openedHints:
                    type: array
                    description: 열린 힌트 목록
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 힌트 ID
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 비어 있음 여부
            totalElements:
              type: number
              description: 총 요소 수
          description: 응답 데이터
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: HTTP 상태 코드
    api-v1-user-pickco-log2003547535:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            numberOfElements:
              type: number
              description: 페이지 내 요소 수
            last:
              type: boolean
              description: 마지막 페이지 여부
            size:
              type: number
              description: 페이지당 요소 수
            totalPages:
              type: number
              description: 총 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이지 여부
                pageNumber:
                  type: number
                  description: 페이지번호
                offset:
                  type: number
                  description: 오프셋
                pageSize:
                  type: number
                  description: 페이지 사이즈
                unpaged:
                  type: boolean
                  description: 비페이지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬
                    sorted:
                      type: boolean
                      description: 정렬
                    empty:
                      type: boolean
                      description: 정렬
                  description: 정렬
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬되지 않음 여부
                sorted:
                  type: boolean
                  description: 정렬 여부
                empty:
                  type: boolean
                  description: 정렬 정보 비어 있음 여부
              description: 정렬 정보
            content:
              type: array
              items:
                type: object
                properties:
                  createdAt:
                    type: string
                    description: 픽코 로그 생성일
                  pickcoLogType:
                    type: string
                    description: 픽코 로그 타입
                  remain:
                    type: number
                    description: 남은 픽코
                  change:
                    type: number
                    description: 사용량/지급량
                  id:
                    type: number
                    description: 픽코 로그 아이디
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 현재 페이지가 비어 있는지 여부
            totalElements:
              type: number
              description: 총 요소 수
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: HTTP 상태 코드
    api-v1-questions-me-1762280047:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                description: 질문 ID
              category:
                type: object
                properties:
                  thumbnail:
                    type: string
                    description: 질문 카테고리 썸네일
                  name:
                    type: string
                    description: 질문 카테고리명
                  id:
                    type: number
                    description: 질문 카테고리 ID
              content:
                type: string
                description: 질문 내용
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-campus-campusId914126042:
      type: object
      properties:
        data:
          type: array
          description: 조회된 캠퍼스 반에 속한 사용자 리스트
          items:
            type: object
            properties:
              campusSection:
                type: number
                description: 반
              gender:
                type: string
                description: 성별
              campusDescription:
                type: string
                description: 반 설명
              campusName:
                type: string
                description: 캠퍼스 이름
              nickname:
                type: string
                description: 사용자 닉네임
              cohort:
                type: number
                description: 기수
              profileImage:
                type: string
                description: 프로필 이미지
              userId:
                type: number
                description: 사용자 ID
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-campus-search-name1806939605:
      type: object
      properties:
        data:
          type: array
          description: 조회된 캠퍼스 반 리스트
          items:
            type: object
            properties:
              name:
                type: string
                description: 캠퍼스 이름
              description:
                type: string
                description: 반 설명
              section:
                type: number
                description: 반
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-ranking-all-631883855:
      type: object
      properties:
        data:
          type: object
          properties:
            topSpendPickcoUsers:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: number
                    description: 픽코 쓴 수
                  user:
                    type: object
                    properties:
                      campusName:
                        type: string
                        description: 캠퍼스
                      name:
                        type: string
                        description: 이름
                      cohort:
                        type: number
                        description: 기수
                      section:
                        type: number
                        description: 반
                      profileImage:
                        type: string
                        description: 프로필이미지
            topMessageReceivers:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: number
                    description: 메시지 받은 수
                  user:
                    type: object
                    properties:
                      campusName:
                        type: string
                        description: 캠퍼스
                      name:
                        type: string
                        description: 이름
                      cohort:
                        type: number
                        description: 기수
                      section:
                        type: number
                        description: 반
                      profileImage:
                        type: string
                        description: 프로필이미지
            topPickSenders:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: number
                    description: 픽 보낸 수
                  user:
                    type: object
                    properties:
                      campusName:
                        type: string
                        description: 캠퍼스
                      name:
                        type: string
                        description: 이름
                      cohort:
                        type: number
                        description: 기수
                      section:
                        type: number
                        description: 반
                      profileImage:
                        type: string
                        description: 프로필이미지
            topPickReceivers:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: number
                    description: 픽받은 수
                  user:
                    type: object
                    properties:
                      campusName:
                        type: string
                        description: 캠퍼스
                      name:
                        type: string
                        description: 이름
                      cohort:
                        type: number
                        description: 기수
                      section:
                        type: number
                        description: 반
                      profileImage:
                        type: string
                        description: 프로필이미지
            questionUserRanking:
              type: array
              description: 질문별 픽을 많이 받은 유저랭킹
              items:
                type: object
                properties:
                  questionContent:
                    type: string
                    description: 질문 내용
                  questionId:
                    type: number
                    description: 질문 아이디
                  campusName:
                    type: string
                    description: 캠퍼스
                  count:
                    type: number
                    description: 픽 받은 수
                  name:
                    type: string
                    description: 사용자 이름
                  cohort:
                    type: number
                    description: 기수
                  section:
                    type: number
                    description: 반
                  profileImage:
                    type: string
                    description: 사용자 프로필이미지
                  userId:
                    type: number
                    description: 사용자 아이디
            topReservePickcoUsers:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: number
                    description: 픽코 보유량
                  user:
                    type: object
                    properties:
                      campusName:
                        type: string
                        description: 캠퍼스
                      name:
                        type: string
                        description: 이름
                      cohort:
                        type: number
                        description: 기수
                      section:
                        type: number
                        description: 반
                      profileImage:
                        type: string
                        description: 프로필이미지
            topMessageSenders:
              type: array
              items:
                type: object
                properties:
                  count:
                    type: number
                    description: 메시지 보낸 수
                  user:
                    type: object
                    properties:
                      campusName:
                        type: string
                        description: 캠퍼스
                      name:
                        type: string
                        description: 이름
                      cohort:
                        type: number
                        description: 기수
                      section:
                        type: number
                        description: 반
                      profileImage:
                        type: string
                        description: 프로필이미지
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-questions-questionId-851306843:
      type: object
      properties:
        data:
          type: object
          properties:
            banCount:
              type: number
              description: 질문을 차단한 횟수
            id:
              type: number
              description: 질문 ID
            category:
              type: object
              properties:
                thumbnail:
                  type: string
                  description: 질문 카테고리 썸네일
                name:
                  type: string
                  description: 질문 카테고리명
                id:
                  type: number
                  description: 질문 카테고리 ID
            skipCount:
              type: number
              description: 질문을 스킵한 횟수
            content:
              type: string
              description: 질문 내용
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-pick-alarm841128005:
      type: object
      properties:
        data:
          type: object
          properties:
            createdAt:
              type: string
              description: 픽 생성일시
            question:
              type: object
              properties:
                banCount:
                  type: number
                  description: 질문을 차단한 횟수
                id:
                  type: number
                  description: 질문 ID
                category:
                  type: object
                  properties:
                    thumbnail:
                      type: string
                      description: 질문 카테고리 썸네일
                    name:
                      type: string
                      description: 질문 카테고리명
                    id:
                      type: number
                      description: 질문 카테고리 ID
                skipCount:
                  type: number
                  description: 질문을 스킵한 횟수
                content:
                  type: string
                  description: 질문 내용
            receiver:
              type: object
              properties:
                campusSection:
                  type: number
                  description: 픽 받은 사람 캠퍼스 반
                gender:
                  type: string
                  description: 픽 받은 사람 성별
                campusDescription:
                  type: string
                  description: 픽 받은 사람 전공
                campusName:
                  type: string
                  description: 픽 받은 사람 캠퍼스 소속
                nickname:
                  type: string
                  description: 픽 받은 사람 이름
                cohort:
                  type: number
                  description: 픽 받은 사람 기수
                profileImage:
                  type: string
                  description: 픽 받은 사람 프로필 이미지
                userId:
                  type: number
                  description: 픽 받은 사람 ID
            sender:
              type: object
              properties:
                campusSection:
                  type: number
                  description: 픽 보낸 사람 캠퍼스 반
                gender:
                  type: string
                  description: 픽 보낸 사람 성별
                campusDescription:
                  type: string
                  description: 픽 보낸 사람 전공
                campusName:
                  type: string
                  description: 픽 보낸 사람 캠퍼스 소속
                nickname:
                  type: string
                  description: 픽 보낸 사람 익명 처리
                cohort:
                  type: number
                  description: 픽 보낸 사람 기수
                profileImage:
                  type: string
                  description: 픽 보낸 사람 프로필 이미지 익명 처리
                userId:
                  type: number
                  description: 픽 보낸 사람 ID (익명 처리)
            alarm:
              type: boolean
              description: 픽 알람 설정 여부
            messageSend:
              type: boolean
              description: 해당 픽 쪽지 전송 여부
            id:
              type: number
              description: 픽 ID
            openedHints:
              type: array
              description: 현재 오픈된 힌트 정보
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-notification-register160560505:
      type: object
      properties:
        token:
          type: string
          description: FCM 에서 제공받은 토큰
    api-v1-follow-recommend1905155110:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            last:
              type: boolean
              description: 마지막 페이지 여부
            numberOfElements:
              type: number
              description: 현재 페이지의 요소 수
            size:
              type: number
              description: 현재 페이지의 요소 수
            totalPages:
              type: number
              description: 전체 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이징 정보가 존재하는지 여부
                pageNumber:
                  type: number
                  description: 현재 페이지 번호
                offset:
                  type: number
                  description: 페이지 오프셋
                pageSize:
                  type: number
                  description: 페이지 사이즈
                unpaged:
                  type: boolean
                  description: 페이징 정보가 없는지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬 정보가 정렬되지 않았는지 여부
                    sorted:
                      type: boolean
                      description: 정렬 정보가 정렬되었는지 여부
                    empty:
                      type: boolean
                      description: 정렬 정보가 비어 있는지 여부
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬 정보가 정렬되지 않았는지 여부
                sorted:
                  type: boolean
                  description: 정렬 정보가 정렬되었는지 여부
                empty:
                  type: boolean
                  description: 정렬 정보가 비어 있는지 여부
            content:
              type: array
              description: 추천 팔로우 유저 목록
              items:
                type: object
                properties:
                  campusSection:
                    type: number
                    description: 캠퍼스 반 정보
                  sameCampus:
                    type: boolean
                    description: 유저 동일 캠퍼스 여부
                  name:
                    type: string
                    description: 유저 닉네임
                  cohort:
                    type: number
                    description: 기수 정보
                  profileImage:
                    type: string
                    description: 프로필 이미지 URL
                  follow:
                    type: boolean
                    description: 유저 팔로우 여부
                  userId:
                    type: number
                    description: 유저 식별자
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 비어 있는 페이지 여부
            totalElements:
              type: number
              description: 전체 요소 수
          description: 페이징된 추천 팔로우 유저 목록
        success:
          type: boolean
          description: API 호출 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: HTTP 상태 코드
    api-v1-questions-categories790849166:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              thumbnail:
                type: string
                description: 질문 카테고리 썸네일
              name:
                type: string
                description: 질문 카테고리명
              id:
                type: number
                description: 질문 카테고리 ID
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-notification652410838:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            numberOfElements:
              type: number
              description: 페이지 내 요소 수
            last:
              type: boolean
              description: 마지막 페이지 여부
            size:
              type: number
              description: 페이지당 요소 수
            totalPages:
              type: number
              description: 총 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이지 여부
                pageNumber:
                  type: number
                  description: 페이지 번호
                offset:
                  type: number
                  description: 오프셋
                pageSize:
                  type: number
                  description: 페이지 크기
                unpaged:
                  type: boolean
                  description: 비페이지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬되지 않음 여부
                    sorted:
                      type: boolean
                      description: 정렬 여부
                    empty:
                      type: boolean
                      description: 정렬 정보 비어 있음 여부
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬되지 않음 여부
                sorted:
                  type: boolean
                  description: 정렬 여부
                empty:
                  type: boolean
                  description: 정렬 정보 비어 있음 여부
            content:
              type: array
              items:
                type: object
                properties:
                  createdAt:
                    type: string
                    description: 메시지 받은 시간
                  read:
                    type: boolean
                    description: 메시지 읽었는지 여부
                  message:
                    type: string
                    description: 받은 알림의 내용
                  title:
                    type: string
                    description: 받은 알림의 제목
                  type:
                    type: string
                    description: 받은 알림 종류
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 비어 있음 여부
            totalElements:
              type: number
              description: 총 요소 수
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-user-me1871948326:
      type: object
      properties:
        data:
          type: object
          properties:
            pickCount:
              type: number
              description: 픽받은 수
            gender:
              type: string
              description: 성별
            campusName:
              type: string
              description: 캠퍼스 이름
            hints:
              type: array
              description: 내 힌트 목록
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            pickco:
              type: number
              description: 픽코
            name:
              type: string
              description: 이름
            cohort:
              type: number
              description: 기수
            section:
              type: number
              description: 반
            profileImage:
              type: string
              description: 프로필 이미지
            id:
              type: number
              description: 식별자
            followingCount:
              type: number
              description: 팔로잉 수
            username:
              type: string
              description: 아이디
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-user-search2123202168:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            numberOfElements:
              type: number
              description: 페이지 내 요소 수
            last:
              type: boolean
              description: 마지막 페이지 여부
            size:
              type: number
              description: 페이지당 요소 수
            totalPages:
              type: number
              description: 총 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이지 여부
                pageNumber:
                  type: number
                  description: 페이지번호
                offset:
                  type: number
                  description: 오프셋
                pageSize:
                  type: number
                  description: 페이지 사이즈
                unpaged:
                  type: boolean
                  description: 비페이지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬
                    sorted:
                      type: boolean
                      description: 정렬
                    empty:
                      type: boolean
                      description: 정렬
                  description: 정렬
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬되지 않음 여부
                sorted:
                  type: boolean
                  description: 정렬 여부
                empty:
                  type: boolean
                  description: 정렬 정보 비어 있음 여부
              description: 정렬 정보
            content:
              type: array
              items:
                type: object
                properties:
                  campusSection:
                    type: number
                    description: 캠퍼스 반 정보
                  sameCampus:
                    type: boolean
                    description: 유저 동일 캠퍼스 여부
                  name:
                    type: string
                    description: 유저 닉네임
                  cohort:
                    type: number
                    description: 기수 정보
                  profileImage:
                    type: string
                    description: 프로필 이미지 URL
                  follow:
                    type: boolean
                    description: 유저 팔로우 여부
                  userId:
                    type: number
                    description: 유저 식별자
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 현재 페이지가 비어 있는지 여부
            totalElements:
              type: number
              description: 총 요소 수
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: HTTP 상태 코드
    api-v1-message-send-779330251:
      type: object
      properties:
        data:
          type: object
          properties:
            number:
              type: number
              description: 현재 페이지 번호
            numberOfElements:
              type: number
              description: 페이지 내 요소 수
            last:
              type: boolean
              description: 마지막 페이지 여부
            size:
              type: number
              description: 페이지당 요소 수
            totalPages:
              type: number
              description: 총 페이지 수
            pageable:
              type: object
              properties:
                paged:
                  type: boolean
                  description: 페이지 여부
                pageNumber:
                  type: number
                  description: 페이지 번호
                offset:
                  type: number
                  description: 오프셋
                pageSize:
                  type: number
                  description: 페이지 크기
                unpaged:
                  type: boolean
                  description: 비페이지 여부
                sort:
                  type: object
                  properties:
                    unsorted:
                      type: boolean
                      description: 정렬되지 않음 여부
                    sorted:
                      type: boolean
                      description: 정렬 여부
                    empty:
                      type: boolean
                      description: 정렬 정보 비어 있음 여부
                  description: 정렬 정보
              description: 페이지 정보
            sort:
              type: object
              properties:
                unsorted:
                  type: boolean
                  description: 정렬되지 않음 여부
                sorted:
                  type: boolean
                  description: 정렬 여부
                empty:
                  type: boolean
                  description: 정렬 정보 비어 있음 여부
              description: 정렬 정보
            content:
              type: array
              description: 메시지 목록
              items:
                type: object
                properties:
                  questionContent:
                    type: string
                    description: 메시지 질문 내용
                  senderSection:
                    type: number
                    description: 보낸 사람 섹션 번호
                  receiverGender:
                    type: string
                    description: 받은 사람 성별
                  receiverName:
                    type: string
                    description: 받은 사람 이름
                  receiverCampus:
                    type: string
                    description: 받은 사람 캠퍼스 이름
                  receiverCohort:
                    type: number
                    description: 받은 사람 기수
                  senderProfileImage:
                    type: string
                    description: 보낸 사람 프로필 이미지
                  content:
                    type: string
                    description: 메시지 내용
                  receiverProfileImage:
                    type: string
                    description: 받은 사람 프로필 이미지
                  senderGender:
                    type: string
                    description: 보낸 사람 성별
                  createdAt:
                    type: string
                    description: 메시지 생성 일시
                  senderName:
                    type: string
                    description: 보낸 사람 이름
                  senderId:
                    type: number
                    description: 메시지 보낸 사람 ID
                  senderCampus:
                    type: string
                    description: 보낸 사람 캠퍼스 이름
                  senderCohort:
                    type: number
                    description: 보낸 사람 기수
                  receiverSection:
                    type: number
                    description: 받은 사람 섹션 번호
                  id:
                    type: number
                    description: 메시지 ID
            first:
              type: boolean
              description: 첫 페이지 여부
            empty:
              type: boolean
              description: 비어 있음 여부
            totalElements:
              type: number
              description: 총 요소 수
          description: 응답 데이터
        success:
          type: boolean
          description: 응답 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: HTTP 상태 코드
    api-v1-auth-mattermost-confirm-575124477:
      type: object
      properties:
        data:
          type: object
          properties:
            authenticated:
              type: boolean
              description: 사용자 메타모스트 인증 여부
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-user566855735:
      type: object
      properties:
        success:
          type: boolean
          description: 성공 여부
        message:
          type: string
          description: 응답 메시지
        status:
          type: number
          description: 응답 코드
    api-v1-campus-1475916295:
      type: object
      properties:
        name:
          type: string
          description: 캠퍼스 이름
        description:
          type: string
          description: 반 전공
        section:
          type: number
          description: 캠퍼스 반
